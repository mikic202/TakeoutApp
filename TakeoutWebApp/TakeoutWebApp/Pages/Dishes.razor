@page "/dishes"
@inject HttpClient Http
@inject NavigationManager NavigationMenager
@inject Takeout.TakeOutService.TakeOutServiceClient client
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<PageTitle>Dishes</PageTitle>

<h1>Your Dishes</h1>


<AuthorizeView>
    <NotAuthorized>
        Sign in to see your dishes.
    </NotAuthorized>
    <Authorized>
        <Button Color="ButtonColor.Primary" @onclick="createDish" class="btn btn-primary" style='float:inline-start;'> Add Dish </Button>
        @if (dishes == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Dish name</th>
                        <th>Description</th>
                        <th>Price</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var dish in dishes)
                    {
                        <tr>
                            <td>@dish.Name</td>
                            <td>@dish.Description</td>
                            <td>@dish.Price</td>
                            <td><button type="button" @onclick="() => editDish(dish)" class="btn btn-primary" style='float:inline-start;'>Edit</button></td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </Authorized>
</AuthorizeView>

@code {
    private TakeoutWebApp.Shared.Dish[]? dishes;

    protected override async Task OnInitializedAsync()
    {
        var restaurnatId = await LocalStorage.GetItemAsync<int>("RestaurantId");
        var reply = await client.GetAllDishesAsync(new Dish.AllDishesRequest { RestaurantId = restaurnatId });
        dishes = new Shared.Dish[reply.Dishes.Count];
        for (int i = 0; i < reply.Dishes.Count; i++)
        {
            var dish = reply.Dishes[i];
            dishes[i] = new Shared.Dish { restaurant_id = restaurnatId , Name = dish.DishName, Price = dish.DishPrice, Description = dish.DishDescription, Id = dish.DishId};
        }
    }
    private void createDish()
    {
        NavigationMenager.NavigateTo("/createDish");
    }

    private void editDish(Shared.Dish dish)
    {
        // Console.WriteLine(time);
        LocalStorage.SetItemAsync<Shared.Dish>("dishToEdit", dish);
        NavigationMenager.NavigateTo("/editDish");
    }
}
