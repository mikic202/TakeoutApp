@page "/login"
@inject NavigationManager NavigationMenager
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvid
@* @inject Grpc.Net.Client.GrpcChannel Channel *@

@inject Takeout.TakeOutService.TakeOutServiceClient client

<h3>Login</h3>

<EditForm Model="user" OnSubmit="HandleLogin">
	<div class="form-group">
		<lable for="username">Username</lable>
		<InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
	</div>
	<div class="form-group">
		<lable for="password">Password</lable>
		<InputText id="password" @bind-Value="user.Password" type="password" class="form-control" wi></InputText>
	</div>
	<div>
		<label></label>
	</div>
	<div>
		<button type="submit" class="btn btn-primary" style='float:inline-start;'>Login</button>
	</div>
	<div>
		<NavLink href="/register" style='float:right;'>Register</NavLink>
	</div>
</EditForm>

@code {
	private Shared.User user = new Shared.User();

	private async void HandleLogin()
	{
		var a = await client.SigninRestaurantAsync(new Signin.RestaurantSigninRequest { Restaurantname = "some_name", Password = "some_pass" });
		Console.WriteLine(a.Outcome);
		// Console.WriteLine("Log me in!");
		// var client = new Signin.LoggingInProvider.LoggingInProviderClient(Channel);
		// Console.WriteLine("Log me in!");
		// // var reply = await client.SigninAsync(new Signin.SigninRequest { Name = "GreeterClient" });
		// Console.WriteLine("Log me in!");
		await LocalStorage.SetItemAsync<string>("username", "some_name");
		await AuthStateProvid.GetAuthenticationStateAsync();
		NavigationMenager.NavigateTo("");
	}
}
