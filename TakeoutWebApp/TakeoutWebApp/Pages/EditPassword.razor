@page "/editPassword"
@inject NavigationManager NavigationMenager
@inject NavigationManager NavigationMenager
@inject Blazored.LocalStorage.ISyncLocalStorageService LocalStorage
@inject Takeout.TakeOutService.TakeOutServiceClient client
<h3>EditPassword</h3>

<EditForm Model="user">
    <div class="form-group">
        <lable for="password">Password</lable>
        <InputText id="password" @bind-Value="user.Password" type="password" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <lable for="password">New Password</lable>
        <InputText id="password" @bind-Value="new_password" type="password" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <lable for="password">Repeat New Password</lable>
        <InputText id="password" @bind-Value="repeated_password" type="password" class="form-control"></InputText>
    </div>
    <div>
        <label></label>
    </div>
    <div>
        <div class="inner"><button type="submit" @onclick="saveCahnges" class="btn btn-primary" style='float:inline-start;'>Save</button></div>
        @* <div class="divider"></div> *@
        <div class="inner"><button type="submit" @onclick="abortNavigate" class="btn btn-primary" style='float:inline-start;'>Abort</button></div>
        @* <div class="divider"></div> *@
    </div>
</EditForm>


@code {
    private Shared.User user = new Shared.User();
    private string repeated_password = "";
    private string new_password = "";
    private void abortNavigate()
    {
        NavigationMenager.NavigateTo("");
    }

    private async void saveCahnges()
    {
        if (repeated_password.Equals(new_password))
        {
            HashAlgorithm hashAlgorithm = SHA512.Create();
            var oldHashedData = hashAlgorithm.ComputeHash(Encoding.ASCII.GetBytes(user.Password));
            var newHashData = hashAlgorithm.ComputeHash(Encoding.ASCII.GetBytes(new_password));
            var reply = await client.ModifyRestaurantPasswordAsync(new ProtoRegister.ModifyRestaurantPasswordRequest
            {
                    Password = BitConverter.ToString(oldHashedData),
                    NewPassword = BitConverter.ToString(newHashData),
                    RestaurantId = int.Parse(LocalStorage.GetItemAsString("RestaurantId"))
            });
            if (reply.Outcome)
            {
                NavigationMenager.NavigateTo("");
            }
        }
    }
}
