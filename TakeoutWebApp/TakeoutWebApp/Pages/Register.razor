@page "/register"
@inject HttpClient Http
@inject NavigationManager NavigationMenager
@inject Takeout.TakeOutService.TakeOutServiceClient client


<PageTitle>Register</PageTitle>

<h1>Register</h1>

<EditForm Model="user" OnSubmit="HandleRegister">
    <div class="form-group">
        <lable for="username">Username</lable>
        <InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <lable for="password">Password</lable>
        <InputText id="password" @bind-Value="user.Password" type="password" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <lable for="password">Repeat Password</lable>
        <InputText id="password" @bind-Value="repeated_password" type="password" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <lable for="Longitude">Longitude</lable>
        <InputNumber id="Longitude" @bind-Value="user.Longitude" class="form-control"></InputNumber>
    </div>
    <div class="form-group">
        <lable for="Latitude">Latitude</lable>
        <InputNumber id="Latitude" @bind-Value="user.Latitude" class="form-control"></InputNumber>
    </div>
    <div>
        <label></label>
    </div>
    <div>
        <button type="submit" class="btn btn-primary">Register</button>
    </div>
</EditForm>


@code {
    private Shared.User user = new Shared.User();
    private string repeated_password = "";
    private async void HandleRegister()
    {
        Console.WriteLine(user.Password);
        if(user.Password.Equals(repeated_password))
        {
            HashAlgorithm hashAlgorithm = SHA512.Create();
            var hashedData = hashAlgorithm.ComputeHash(Encoding.ASCII.GetBytes(user.Password));
            var reply = await client.RegisterRestaurantAsync(new ProtoRegister.RegisterRestaurantRequest
            {
                Password = BitConverter.ToString(hashedData),
                RestaurantName = user.Username,
                RestaurantLocation = new Location.Location { Longitude = user.Longitude, Latitude = user.Latitude }
            });
            if(reply.Outcome)
                NavigationMenager.NavigateTo("/login");
        }
    }
}
